export const cssDescription = {
  'css-1': 'Подготовьте документ с двумя разделами. Первый раздел определяется первым стилем (буквы должны печататься коричневым по светло-серому фону; расстояние между содержимым и рамкой элемента должно составлять 0,5 см; текст выравнивается по левому и правому краям), второй — вторым (фон бирюзовый; расстояние между содержимым и рамкой элемента должно составлять 0,5 см; поля слева и справа от элемента по 1 см). Второй раздел должен быть вложен в первый, чтобы было видно наследование.',
  'css-2': 'Определите стиль .nb таким образом, чтобы элемент заключался в рамку (бордюр), занимал (по ширине) половину окна браузера (независимо от его размера), был расположен у левого края, а остальные элементы страницы обтекали бы этот элемент справа.',
  'css-3': 'Подготовьте стиль для абзаца, у которого слева и справа проводится вертикальная черта (на всю высоту абзаца).',
  'css-4': 'Подготовьте стиль абзаца "подложка" (.ground) и стиль "надпись" (.poster). Используя созданные стили, создайте страницу с надписью поверх подложки. Подложка пишется очень крупными буквами мягкого светло-серого цвета. Надпись пишется коричневыми буквами обычного размера.',
  'css-5': 'Используя стили, сделайте страницу, в которой текст выводится в две колонки и первая буква каждой колонки оформлена в виде буквицы.',
  'css-6': 'Постройте на экране две области с линейками прокрутки и поместите в них информационные элементы',
  'css-7': 'Реализовать три медиазапроса: 1. Создать блочный элемент, в котором находится большой текст. В зависимости от размера окна браузера уменьшать размеры блочного элемента и произвести усечение текста с добавлением многоточия. 2. Изменить созданный сайт следующим образом: при уменьшении размера экрана до 600 пикселов, боковые панели с меню и анонсами рубрик убирались, оставался только Content. 3. Создать следующий медиазапрос: при уменьшении размера окна браузера двухколонный текст с буквицей преобразовывается в одноколонный текст без буквицы.',
  'css-8': 'Произвести задание стилевых свойств, используя следующие способы доступа: селекторы атрибутов; значение атрибута в начале атрибута; значение атрибута в середине атрибута; значение атрибута в конце атрибута.',
  'css-9': 'Используя структурные псевдоклассы, задать следующие стилевые свойства для групп элементов: изменение только первого элемента группы; изменение только последнего элемента группы; изменение только четных элементов группы; изменение только нечетных элементов группы; изменение соседних двух элементов через три соседних элемента; изменение только заданного элемента; изменение всех элементов, кроме одного',
  'css-10': 'Для блока задать не менее трех различных способов отображения (с использованием свойства boder-radius). Для задания цвета использовать форматы hsl, hsla.',
  'css-11': 'Используя различные свойства теней для текста, создать: объемную надпись, наложить несколько теней на текст. Создать градиентный фон для блока. Применить к различным изображениям не менее 3 фильтров.',
  'css-12': 'Создать не менее 3 различных переходов. Для блочных элементов создать следующие 2D-преобразования при наведении на них курсора мыши: масштабирование, перемещение, вращение, наклон.',
  'css-13': 'Используя возможности Flexbox реализовать следующие действия: выравнивание текста по вертикали и горизонтали в блочном элементе; смещение одного из элементов списка к правому или левому краю; преобразование списка из вертикального в горизонтальный или из горизонтального в вертикальный при изменение размера экрана; изменение порядка следования элементов списка на противоположный.',
}
export const cssMenuList = [
  {
    id: 1,
    title: 'Наследование',
    url: '/CSS/css-1',
  },
  {
    id: 2,
    title: 'Обтекание',
    url: '/CSS/css-2',
  },
  {
    id: 3,
    title: 'Рамка',
    url: '/CSS/css-3',
  },
  {
    id: 4,
    title: 'Подложка',
    url: '/CSS/css-4',
  },
  {
    id: 5,
    title: 'Двухколонный',
    url: '/CSS/css-5',
  },
  {
    id: 6,
    title: 'Область с прокруткой',
    url: '/CSS/css-6',
  },
  {
    id: 7,
    title: 'Медиазапрос',
    url: '/CSS/css-7',
  },
  {
    id: 8,
    title: 'Селекторы атрибутов',
    url: '/CSS/css-8',
  },
  {
    id: 9,
    title: 'Структурные псевдоклассы',
    url: '/CSS/css-9',
  },
  {
    id: 10,
    title: 'Цветовые режимы',
    url: '/CSS/css-10',
  },
  {
    id: 11,
    title: 'Создание тени, градиентного фона, фильтры',
    url: '/CSS/css-11',
  },
  {
    id: 12,
    title: 'Переходы, преобразования и анимация',
    url: '/CSS/css-12',
  },
  {
    id: 13,
    title: 'Flexbox, переключение разрешения изображений',
    url: '/CSS/css-14',
  },
];

export const cssRouters = [
  {
    path: '/CSS/css-1',
    element: 'CSS1',
    description: 'css-1',
  },
  {
    path: '/CSS/css-2',
    element: 'CSS2',
    description: 'css-2',
  },
  {
    path: '/CSS/css-3',
    element: 'CSS3',
    description: 'css-3',
  },
  {
    path: '/CSS/css-4',
    element: 'CSS4',
    description: 'css-4',
  },
  {
    path: '/CSS/css-5',
    element: 'CSS5',
    description: 'css-5',
  },
  {
    path: '/CSS/css-6',
    element: 'CSS6',
    description: 'css-6',
  },
  {
    path: '/CSS/css-7',
    element: 'CSS7',
    description: 'css-7',
  },
  {
    path: '/CSS/css-8',
    element: 'CSS8',
    description: 'css-8',
  },
  {
    path: '/CSS/css-9',
    element: 'CSS9',
    description: 'css-9',
  },
  {
    path: '/CSS/css-10',
    element: 'CSS10',
    description: 'css-10',
  },
  {
    path: '/CSS/css-11',
    element: 'CSS11',
    description: 'css-11',
  },
  {
    path: '/CSS/css-12',
    element: 'CSS12',
    description: 'css-12',
  },
  {
    path: '/CSS/css-13',
    element: 'CSS13',
    description: 'css-13',
  },
]
